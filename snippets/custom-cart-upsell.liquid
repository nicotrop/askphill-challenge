{% style %}

    :root {
        --grayscale-8: #7A7A7A;
        --grayscale-10: #595959;
        --grayscale-15: #353535;
        --grayscale-20: #000000;
    }

    .custom-product-card-wrapper {
        display: flex;
        padding: 0px 0px 32px 0px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        align-self: stretch;
    }
    .custom-product-card-title {
        color: var(--grayscale-8);
        margin: 24px 0px 12px 0px;
        font-size: 12px;
        font-style: normal;
        font-weight: 400;
        line-height: 180%;
        text-align: left;
        width: 100%;
    }
    .custom-product {
        display: flex;
        justify-content: space-between;
        width: 100%;
        background: #F6F6F6;
    }
    .custom-product-middle {
        display: flex;
        flex-direction: column;
        justify-content: space-between;
        padding: 8px 0px;
        gap: 14px;
    }
    .custom-product-middle-text {
        display: flex;
        flex-direction: column;
        font-size: 12px;
        font-style: normal;
        color: var(--grayscale-10);
    }
    .custom-product-title {
        font-weight: 600;
        line-height: 120%;
        letter-spacing: 0.48px;
        text-transform: uppercase;
        margin: 0px;
        padding: 0px;
    }
    .custom-product-subtitle {
        font-weight: 400;
        line-height: 180%;
    }
    .custom-product-price {
        font-size: 12px;
        font-style: normal;
        font-weight: 400;
        line-height: 180%;
        margin: 0px;
    }
    .custom-product-right {
        display: flex;
        flex-direction: column;
        justify-content: flex-end;
        align-items: flex-end;
        padding: 8px 0px;
        padding-right: 8px;
    }
    .custom-atc-btn {
        display: flex;
        color: white;
        height: 40px;
        width: 100%;
        align-items: center;
        background: var(--grayscale-20);
        border: none;
        margin: 0px;
        padding: 0px;
    }
    .custom-atc-text {
        height: 100%;
        padding: 13px 20px;
        border-right: 1px solid var(--grayscale-15);
    }
    .custom-atc-icon {
        height: 100%;
        padding: 16.5px 18px 17.5px 18px;
    }
    .custom-atc-text, .custom-atc-btn div {
        display: flex;
        justify-content: center;
        align-items: center;
    }

    .custom-atc-text span {
        font-size: 12px;
        font-style: normal;
        font-weight: 600;
        line-height: 120%;
        letter-spacing: 0.96px;
        text-transform: uppercase;
    }

    .custom-atc-icon .loading-overlay__spinner svg circle {
        stroke: white;
    }



{% endstyle %}

<div class="custom-product-card-wrapper">
    <h4 class="custom-product-card-title">Vind je dit ook leuk?</h4>

    {% comment %} Grab the first product from the upsell collection {% endcomment %}
    {% comment %} {% assign product = collections['upsell-collection'].products | first %} {% endcomment %}
    {% comment %} Grab the first product from the cart drawer collection uploaded on settings {% endcomment %}
    {% assign product = settings.cart_drawer_collection.products | first %}
    <div class="custom-product">
        {% comment %} Left {% endcomment %}
        {% if product.featured_image %}
        <img src={{ product.featured_image | img_url: 300 }} alt={{ product.featured_image.alt }} loading="lazy" height="96" width={{ 96 | times: product.featured_image.aspect_ratio | ceil }} />
        {% endif %}
        {% comment %} Middle {% endcomment %}
        <div class="custom-product-middle">
            <div class="custom-product-middle-text">
                <h4 class="custom-product-title">{{ product.title }}</h4>
                <span class="custom-product-subtitle">
                    {% for option in product.first_available_variant.options %}
                        {% unless forloop.last %}
                        {{ option | append: ' ' }}
                        {% else %}
                        {{ option }}
                        {% endunless %}
                    {% endfor %}
                </span>
            </div>
            <p class="custom-product-price">{{ product.first_available_variant.price | money }}</p>
        </div>
        {% comment %} Right  {% endcomment %}
        <div class="custom-product-right">
            {% comment %} Add to cart form {% endcomment %}
            {% form "product", product, id: 'custom-upsell-form' %}
                {% comment %} input for quantity, productID {% endcomment %}
                <input type="hidden" name="quantity" value="1">
                <input type="hidden" name="id" value={{ product.first_available_variant.id }}>
                {% comment %} Add to cart button {% endcomment %}
                <button type="submit" class="custom-atc-btn">
                    <div class="custom-atc-text">
                        <span>{{ 'products.product.add_to_cart' | t }}</span>
                    </div>
                    <div class="custom-atc-icon">
                        {% render 'add-icon.custom' %}
                        {% comment %} Loading spinner / hidden on mount {% endcomment %}
                        <div class="loading-overlay__spinner hidden" style="display:flex; justify-content:center;">
                            <svg
                            aria-hidden="true"
                            focusable="false"
                            class="spinner"
                            viewBox="0 0 66 66"
                            xmlns="http://www.w3.org/2000/svg"
                            >
                                <circle class="path" fill="none" stroke-width="6" cx="33" cy="33" r="30"></circle>
                            </svg>
                        </div>
                    </div>
                </button>
            {% endform %}
        </div>
    </div>
</div>

<script>
  window.addEventListener('DOMContentLoaded', () => {

  //Fetch cart drawer section using ID
    const updateCartDrawer = async () => {
      const response = await fetch(window.location.pathname + '?section_id=cart-drawer')
        .then(response => response.text())
        .catch(error => {
          console.error('Error:', error);
        });
      return response;
    };

    //Function to handle form submission
    const handleFormSubmit = async (e) => {
      e.preventDefault();

      // Select form
      const form = document.querySelector("form#custom-upsell-form");

      // Grab product ID from hidden input with name "id"
      const productID = form.querySelector("input[name='id']").value;
      const quantity = form.querySelector("input[name='quantity']").value;

      // Hide button
      const icon = form.querySelector(".custom-atc-icon svg");
      icon.classList.add("hidden");
      // Show loading overlay
      const loadingOverlay = form.querySelector(".loading-overlay__spinner");
      loadingOverlay.classList.remove("hidden");

      // Send add product to cart request
      const response = await fetch(window.Shopify.routes.root + 'cart/add.js', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        },
        body: JSON.stringify({
          'items': [{
            'id': productID,
            'quantity': quantity
          }]
        })
      }).then(response => response.json())
        .catch(error => {
          console.error('Error:', error);
        });

      // Update cart drawer
      const cartDrawer = await updateCartDrawer();

      // Format response as HTML
      const html = document.createElement('div');
      html.innerHTML = cartDrawer;

      // Grab children HTML of cart-drawer component
      const newCartDrawer = html.querySelector("cart-drawer").innerHTML;
      document.querySelector("cart-drawer").innerHTML = newCartDrawer;
    };

    // Attach event listener to document instead of form component for form submission due to utilization of innerHTML
    document.addEventListener("submit", async (e) => {
      if (e.target.matches("form#custom-upsell-form")) {
        handleFormSubmit(e);
      }
    });
  });
</script>